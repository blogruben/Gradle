plugins {
    id 'java'
    id 'application'
}

def clasePrincipal = 'org.java.ruben.compilarJar.App'
def directorioApp = 'App'
def nombreDelJar = 'Exportacion'


repositories {
    mavenCentral()
}

application {
    //clase principal para "gradlew -q run"
    mainClassName = "$clasePrincipal"
}

jar {
    //a√±adimos al manifest
    manifest {
        attributes "Main-Class": "$clasePrincipal"
    }
    //creamos un fat-jar con todas las libs
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    //copiamos los archivos jpg dentro del jar
    from('otrosRecursos') {
      include 'img/**/*.jpg'
    }
    //nombre del jar
    baseName "$nombreDelJar"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
task wrapVersion(type: Wrapper) {
   gradleVersion = '5.6' 
}


task generarCompilado {
    doLast {
        //Crear directorio App con el jar y el properties
        project.delete "$directorioApp"
        project.mkdir "$directorioApp"
        copy {
            from "build/libs/${nombreDelJar}.jar","src/main/properties/ejemplo.properties"
            into "$directorioApp"
        }
        println("Generado compilado en: ${directorioApp}/${nombreDelJar}.jar")
        println("Ejecutar con: java -jar ${directorioApp}/${nombreDelJar}.jar")
    }
}

//sobreescribir el metodo run
tasks.run.configure {
    actions.clear()
    doLast {
        javaexec { 
            main="-jar"; args "${directorioApp}/${nombreDelJar}.jar"
        }
    }
}


run.dependsOn(build) //antes del run
build.finalizedBy(generarCompilado) // despues del build
